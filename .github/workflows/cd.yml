name: CD

on:
  workflow_run:
    workflows: ["CI"]
    branches: [main]
    types: 
      - completed

jobs:
  deploy:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    
    steps:
    - uses: actions/checkout@v2

    # Install Docker Compose
    - name: Install Docker Compose
      run: |
        DOCKER_CONFIG=${DOCKER_CONFIG:-$HOME/.docker}
        mkdir -p $DOCKER_CONFIG/cli-plugins
        curl -SL https://github.com/docker/compose/releases/download/v2.23.3/docker-compose-linux-x86_64 -o $DOCKER_CONFIG/cli-plugins/docker-compose
        chmod +x $DOCKER_CONFIG/cli-plugins/docker-compose
        docker compose version

    # Login to Docker Registry
    - name: Login to Container Registry
      uses: docker/login-action@v2
      with:
        registry: studyprodcontainerregister.azurecr.io
        username: ${{ secrets.ACR_USERNAME }}
        password: ${{ secrets.ACR_PASSWORD }}

    # Login to Azure
    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    # Deploy Frontend
    - name: Deploy Frontend
      uses: azure/webapps-deploy@v2
      with:
        app-name: studyproductivityapp-frontend
        images: studyprodcontainerregister.azurecr.io/frontend:latest

    # Deploy Backend
    - name: Deploy Backend
      uses: azure/webapps-deploy@v2
      with:
        app-name: studyproductivityapp-backend
        images: studyprodcontainerregister.azurecr.io/backend:latest

    # Verify Backend Deployment
    - name: Verify Backend Deployment
      run: |
        echo "Waiting for backend to start..."
        sleep 30  # Give the app some time to start
        curl -s -o /dev/null -w "%{http_code}" https://studyproductivityapp-backend-bpc4cxfhctgqgeev.polandcentral-01.azurewebsites.net/health

    # Configure Backend App Settings
    - name: Configure Backend App Settings
      run: |
        az webapp config appsettings set --name studyproductivityapp-backend --resource-group your-resource-group --settings \
          AZURE_TENANT_ID="${{ secrets.AZURE_TENANT_ID }}" \
          AZURE_CLIENT_ID="${{ secrets.AZURE_CLIENT_ID }}" \
          AZURE_CLIENT_SECRET="${{ secrets.AZURE_CLIENT_SECRET }}" \
          KEY_VAULT_URL="${{ secrets.KEY_VAULT_URL }}" \
          WEBSITES_PORT=5193

    # Restart Apps after configuration
    - name: Restart Apps
      run: |
        az webapp restart --name studyproductivityapp-backend --resource-group your-resource-group
        az webapp restart --name studyproductivityapp-frontend --resource-group your-resource-group