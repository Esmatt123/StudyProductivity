name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    # Frontend Tests
    - name: Setup Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '20'
    
    - name: Install Frontend Dependencies
      working-directory: ./FrontEnd
      run: npm install --legacy-peer-deps
    
    - name: Run Frontend Tests
      working-directory: ./FrontEnd
      env:
        NEXT_PUBLIC_VITE_BACKEND_URL: https://studyproductivityapp-backend.azurewebsites.net
      run: npm test

    # Backend Tests
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '8.0.x'
    
    - name: Run Backend Tests
      run: dotnet test StudyProductivityApp.Persistence.Tests/StudyProductivityApp.Persistence.Tests.csproj

  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    # Set up Docker Compose
    - name: Install Docker Compose
      run: |
        DOCKER_CONFIG=${DOCKER_CONFIG:-$HOME/.docker}
        mkdir -p $DOCKER_CONFIG/cli-plugins
        curl -SL https://github.com/docker/compose/releases/download/v2.23.3/docker-compose-linux-x86_64 -o $DOCKER_CONFIG/cli-plugins/docker-compose
        chmod +x $DOCKER_CONFIG/cli-plugins/docker-compose
        docker compose version

    # Login to Docker Registry
    - name: Login to Container Registry
      uses: docker/login-action@v2
      with:
        registry: studyprodcontainerregister.azurecr.io
        username: ${{ secrets.ACR_USERNAME }}
        password: ${{ secrets.ACR_PASSWORD }}

    # Build and push containers
    # In CI workflow, under build job
    # Build and push containers
    # Build and push containers
    - name: Build and push containers
      env:
        AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
        AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
        AZURE_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
        KEY_VAULT_URL: ${{ secrets.KEY_VAULT_URL }}
      run: |
        docker compose build
        docker compose push